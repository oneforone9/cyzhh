<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.essence</groupId>
    <artifactId>cyzhhh</artifactId>
    <packaging>pom</packaging>
    <version>1.0.0</version>

    <name>cyzhhh</name>
    <description>朝阳区智慧河湖管理系统</description>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.5.2</version> <!-- lookup parent from repository -->
    </parent>
    <modules>
        <module>cyzhhh-common</module>
        <module>cyzhhh-api</module>
        <module>cyzhhh-dao</module>
        <module>cyzhhh-service</module>
        <module>cyzhhh-web</module>
        <module>cyzhhh-start</module>
        <module>cyzhhh-job</module>
        <module>cyzhhh-websocket</module>
        <module>cyzhhh-execute</module>
        <module>cyzhhh-job-zz-net</module>
        <module>iot</module>
    </modules>

    <properties>
        <java.version>1.8</java.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <spring-boot.version>2.5.2</spring-boot.version>
        <pagehelper.version>1.2.5</pagehelper.version>
        <lombok.version>1.18.24</lombok.version>
        <log4j2.version>2.15.0</log4j2.version>
        <jetcache.version>2.6.0</jetcache.version>
        <validation.version>2.0.3.RELEASE</validation.version>
        <fastjson.version>1.2.54</fastjson.version>
        <druid.version>1.0.1</druid.version>
        <essence-util.version>1.0.1</essence-util.version>
        <thumbnailator.version>0.4.7</thumbnailator.version>
        <mapstruct.version>1.5.0.Beta1</mapstruct.version>
        <mybatis-plus.version>3.2.0</mybatis-plus.version>
        <ikanalyzer.version>2012_u6</ikanalyzer.version>
        <cloud-alibaba.version>2.2.1.RELEASE</cloud-alibaba.version>
        <spring-cloud-netflix.version>2.0.0.RELEASE</spring-cloud-netflix.version>
        <spring-cloud-openfeign.version>2.0.0.RELEASE</spring-cloud-openfeign.version>
        <nacos-discovery.version>0.2.2.RELEASE</nacos-discovery.version>
        <nacos-client.version>1.1.0</nacos-client.version>
        <euauth-client.version>2.2.0</euauth-client.version>
        <spring-cloud.version>2020.0.4</spring-cloud.version>
        <easyexcel.version>3.0.5</easyexcel.version>
        <minio.version>7.0.2</minio.version>
        <hutool.version>5.8.7</hutool.version>
        <ecode-common.version>1.0.0</ecode-common.version>
        <httpclient.version>4.5.5</httpclient.version>
        <jsoup.version>1.12.1</jsoup.version>
        <apache-poi.version>4.1.2</apache-poi.version>
    </properties>
    <dependencies>
        <dependency>
            <!--不使用Ribbon 进行客户端负载均衡-->
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-netflix-ribbon</artifactId>
            <exclusions>
                <exclusion>
                    <groupId>*</groupId>
                    <artifactId>*</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <!-- 日志依赖    开始   -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-logging</artifactId>
            <exclusions>
                <exclusion>
                    <groupId>*</groupId>
                    <artifactId>*</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <scope>provided</scope>
        </dependency>
    </dependencies>
    <dependencyManagement>
        <dependencies>
            <!--本项目 start-->
            <dependency>
                <groupId>com.essence</groupId>
                <artifactId>cyzhhh-api</artifactId>
                <version>1.0.0</version>
            </dependency>
            <dependency>
                <groupId>org.gavaghan</groupId>
                <artifactId>geodesy</artifactId>
                <version>1.1.3</version>
            </dependency>
            <dependency>
                <groupId>com.essence</groupId>
                <artifactId>cyzhhh-common</artifactId>
                <version>1.0.0</version>
            </dependency>
            <dependency>
                <groupId>com.essence</groupId>
                <artifactId>cyzhhh-dao</artifactId>
                <version>1.0.0</version>
            </dependency>
            <dependency>
                <groupId>com.essence</groupId>
                <artifactId>cyzhhh-job</artifactId>
                <version>1.0.0</version>
            </dependency>
            <dependency>
                <groupId>com.essence</groupId>
                <artifactId>cyzhhh-service</artifactId>
                <version>1.0.0</version>
            </dependency>
            <dependency>
                <groupId>com.essence</groupId>
                <artifactId>cyzhhh-start</artifactId>
                <version>1.0.0</version>
            </dependency>
            <dependency>
                <groupId>com.essence</groupId>
                <artifactId>cyzhhh-web</artifactId>
                <version>1.0.0</version>
            </dependency>
            <dependency>
                <groupId>com.essence</groupId>
                <artifactId>cyzhhh-websocket</artifactId>
                <version>1.0.0</version>
            </dependency>
            <!--本项目 start-->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>${spring-boot.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <!--web-->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-web</artifactId>
                <version>${spring-boot.version}</version>
            </dependency>

            <!-- 日志依赖  开始          -->
            <!-- log4j2日志实现-->
            <!--log4j2-->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-log4j2</artifactId>
                <version>${spring-boot.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.logging.log4j</groupId>
                <artifactId>log4j-core</artifactId>
                <version>${log4j2.version}</version>
            </dependency>
            <!-- log4j2日志门面 -->
            <dependency>
                <groupId>org.apache.logging.log4j</groupId>
                <artifactId>log4j-api</artifactId>
                <version>${log4j2.version}</version>
            </dependency>
            <!-- 日志依赖  结束          -->
            <!--lombok-->
            <dependency>
                <groupId>org.projectlombok</groupId>
                <artifactId>lombok</artifactId>
                <version>${lombok.version}</version>
            </dependency>
            <!--fastjson-->
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>fastjson</artifactId>
                <version>${fastjson.version}</version>
            </dependency>
            <!--druid-->
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>druid</artifactId>
                <version>${druid.version}</version>
            </dependency>
            <!--essence-util-->
            <dependency>
                <groupId>com.essence.framework</groupId>
                <artifactId>essence-util</artifactId>
                <version>${essence-util.version}</version>
            </dependency>
            <!--jetcache-->
            <dependency>
                <groupId>com.alicp.jetcache</groupId>
                <artifactId>jetcache-starter-redis-lettuce</artifactId>
                <version>${jetcache.version}</version>
            </dependency>
            <!--mapstruct-->
            <dependency>
                <groupId>org.mapstruct</groupId>
                <artifactId>mapstruct</artifactId>
                <version>${mapstruct.version}</version>
            </dependency>
            <!--javax.validation 参数校验-->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-validation</artifactId>
                <version>${validation.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>org.apache.tomcat.embed</groupId>
                        <artifactId>tomcat-embed-el</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>

            <!--thumbnailator 文件工具类用到(创建缩略图)-->
            <dependency>
                <groupId>net.coobird</groupId>
                <artifactId>thumbnailator</artifactId>
                <version>${thumbnailator.version}</version>
            </dependency>
            <!--mybatis-plus-->
            <dependency>
                <groupId>com.baomidou</groupId>
                <artifactId>mybatis-plus-boot-starter</artifactId>
                <version>${mybatis-plus.version}</version>
            </dependency>
            <!--solr-->
            <!--            <dependency>-->
            <!--                <groupId>org.springframework.boot</groupId>-->
            <!--                <artifactId>spring-boot-starter-data-solr</artifactId>-->
            <!--                <version>${spring-boot.version}</version>-->
            <!--            </dependency>-->
            <!--ik分词器-->
            <dependency>
                <groupId>com.janeluo</groupId>
                <artifactId>ikanalyzer</artifactId>
                <version>${ikanalyzer.version}</version>
            </dependency>
            <!--essence euauth start-->
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${spring-cloud.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>com.alibaba.cloud</groupId>
                <artifactId>spring-cloud-alibaba-dependencies</artifactId>
                <version>${cloud-alibaba.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-starter-netflix-ribbon</artifactId>
                <version>${spring-cloud-netflix.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-starter-openfeign</artifactId>
                <version>${spring-cloud-openfeign.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-starter-alibaba-nacos-discovery</artifactId>
                <version>${nacos-discovery.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>com.alibaba.nacos</groupId>
                        <artifactId>nacos-client</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>com.alibaba.nacos</groupId>
                <artifactId>nacos-client</artifactId>
                <version>${nacos-client.version}</version>
            </dependency>
            <dependency>
                <groupId>com.essence</groupId>
                <artifactId>euauth-client</artifactId>
                <version>${euauth-client.version}</version>
            </dependency>
            <!--essence euauth end-->
            <!--easyexcel-->
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>easyexcel</artifactId>
                <version>${easyexcel.version}</version>
            </dependency>
            <!--minio-->
            <dependency>
                <groupId>io.minio</groupId>
                <artifactId>minio</artifactId>
                <version>${minio.version}</version>
            </dependency>
            <dependency>
                <groupId>cn.hutool</groupId>
                <artifactId>hutool-all</artifactId>
                <version>${hutool.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.httpcomponents</groupId>
                <artifactId>httpclient</artifactId>
                <version>${httpclient.version}</version>
            </dependency>
            <dependency>
                <groupId>org.jsoup</groupId>
                <artifactId>jsoup</artifactId>
                <version>${jsoup.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.poi</groupId>
                <artifactId>poi</artifactId>
                <version>${apache-poi.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.poi</groupId>
                <artifactId>poi-ooxml</artifactId>
                <version>${apache-poi.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.poi</groupId>
                <artifactId>poi-ooxml-schemas</artifactId>
                <version>${apache-poi.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>
    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.8.1</version>
                <configuration>
                    <source>1.8</source>
                    <target>1.8</target>
                    <encoding>UTF-8</encoding>
                    <annotationProcessorPaths>
                        <path>
                            <groupId>org.projectlombok</groupId>
                            <artifactId>lombok</artifactId>
                            <version>${lombok.version}</version>
                        </path>
                        <path>
                            <groupId>org.mapstruct</groupId>
                            <artifactId>mapstruct-processor</artifactId>
                            <version>${mapstruct.version}</version>
                        </path>
                    </annotationProcessorPaths>
                </configuration>
            </plugin>
            <!--smart-doc 接口文档插件-->
            <plugin>
                <groupId>com.github.shalousun</groupId>
                <artifactId>smart-doc-maven-plugin</artifactId>
                <version>2.2.7</version>
                <configuration>
                    <!--指定生成文档的使用的配置文件,配置文件放在自己的项目中-->
                    <configFile>./src/main/resources/smart-doc.json</configFile>
                    <!--指定项目名称-->
                    <projectName>朝阳区智慧河湖管理系统</projectName>
                    <!--smart-doc实现自动分析依赖树加载第三方依赖的源码，如果一些框架依赖库加载不到导致报错，这时请使用excludes排除掉-->
                    <excludes>
                        <!--格式为：groupId:artifactId;参考如下-->
                        <exclude>com.alibaba:fastjson</exclude>
                    </excludes>
                    <!--自1.0.8版本开始，插件提供includes支持,配置了includes后插件会按照用户配置加载而不是自动加载，因此使用时需要注意-->
                    <!--smart-doc能自动分析依赖树加载所有依赖源码，原则上会影响文档构建效率，因此你可以使用includes来让插件加载你配置的组件-->
                    <includes>
                        <!--格式为：groupId:artifactId;参考如下-->
                        <include>com.alibaba:fastjson</include>
                    </includes>
                </configuration>
                <executions>
                    <execution>
                        <!--如果不需要在执行编译时启动smart-doc，则将phase注释掉-->
                        <!--<phase>compile</phase>-->
                        <goals>
                            <!--smart-doc提供了html、openapi、markdown等goal，可按需配置-->
                            <goal>html</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

</project>
